---
import getIcon, { type Variants } from "./getIcon";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"svg"> {
    name: string;
    variant?: (typeof Variants)[number];
    size?: string | number;
}

const {
    name,
    variant = "original",
    size,
    width: w,
    height: h,
    ...props
} = Astro.props;

let viewBox: string;
let inner: string;
let fallback = false;

if (Astro.slots.has("fallback")) {
  try {
    const { viewBox: v, inner: i } = await getIcon(name, variant)
    viewBox = v;
    inner = i
  } catch {
    fallback = true
  }
} else {
  const { viewBox: v, inner: i } = await getIcon(name, variant);
  viewBox = v;
  inner = i;
}

const width = size ?? w ?? "24";
const height = size ?? h ?? "24";
---

{ fallback ? (
        <slot name="fallback"  />
    ) : (
        <svg
            viewBox={viewBox}
            xmlns="http://www.w3.org/2000/svg"
            width={width}
            height={height}
            {...props}
        >
            <Fragment set:html={inner} />
        </svg>
    )
}
